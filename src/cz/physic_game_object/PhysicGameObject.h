/*
 * PhysicGameObject.h
 *
 *  Created on: Nov 9, 2013
 *      Author: agustin
 */

#ifndef PHYSICGAMEOBJECT_H_
#define PHYSICGAMEOBJECT_H_

#include "HitInfo.h"

namespace cz {

// @brief This class will be used as an interface to be implemented in the child
//        classes to handle collisions impacts from bullets or any other kind
//        of force (external to the forces generated by the physics engine).
//        The idea is that all of the elements that are CZRM_RAYCASTABLE
//        should have set the userPointer() to the instance of the PhysicGameObject
//

class PhysicGameObject
{
public:
    PhysicGameObject() {};
    virtual
    ~PhysicGameObject() {};

    // @brief Check for a possible impact. This method will only check if we
    //        impact the current object.
    // @param hitInfo       The hit information structure used to check the
    //                      impact and retrieve the information also. This
    //                      information will be used later if necessary to process
    //                      the ImpactInfo.
    // @return true if we had impact the world object or not.
    //
    virtual bool
    checkImpact(HitInfo& hitInfo) const = 0;

    // @brief The object was hit by a bullet or something (indicated in the
    //        HitInfo structure). Here we will perform all the operations we
    //        when something hits this object.
    // @param hitInfo       The hit information structure. This structure should
    //                      be filled in the checkImpact() method.
    //
    virtual void
    processImpactInfo(const HitInfo& hitInfo) = 0;

};

} /* namespace cz */
#endif /* PHYSICGAMEOBJECT_H_ */
